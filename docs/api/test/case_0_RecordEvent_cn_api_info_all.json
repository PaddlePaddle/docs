{    
    "83047248": {
        "all_names": [
            "paddle.profiler.RecordEvent",
            "paddle.profiler.utils.RecordEvent"
        ],
        "id": 83047248,
        "type": "type",
        "docstring": "Interface for recording a time range by user defined.\n\nArgs:\n    name (str): Name of the record event.\n    event_type (TracerEventType, optional): Optional, default value is\n        `TracerEventType.PythonUserDefined`. It is reserved for internal\n        purpose, and it is better not to specify this parameter.\n\nExamples:\n    .. code-block:: python\n        :name: code-example1\n\n        import paddle\n        import paddle.profiler as profiler\n        # method1: using context manager\n        with profiler.RecordEvent(\"record_add\"):\n            data1 = paddle.randn(shape=[3])\n            data2 = paddle.randn(shape=[3])\n            result = data1 + data2\n        # method2: call begin() and end()\n        record_event = profiler.RecordEvent(\"record_add\")\n        record_event.begin()\n        data1 = paddle.randn(shape=[3])\n        data2 = paddle.randn(shape=[3])\n        result = data1 + data2\n        record_event.end()\n\n**Note**:\n    RecordEvent will take effect only when :ref:`Profiler <api_paddle_profiler_Profiler>` is on and at the state of `RECORD`."
    },
    "139946288563392": {
        "all_names": [
            "paddle.profiler.RecordEvent.begin"
        ],
        "id": 139946288563392,
        "type": "function",
        "docstring": "Record the time of beginning.\n\nExamples:\n\n    .. code-block:: python\n        :name: code-example2\n\n        import paddle\n        import paddle.profiler as profiler\n        record_event = profiler.RecordEvent(\"record_sub\")\n        record_event.begin()\n        data1 = paddle.randn(shape=[3])\n        data2 = paddle.randn(shape=[3])\n        result = data1 - data2\n        record_event.end()"
    },
    "139946288563536": {
        "all_names": [
            "paddle.profiler.RecordEvent.end"
        ],
        "id": 139946288563536,
        "type": "function",
        "docstring": "Record the time of ending.\n\nExamples:\n\n    .. code-block:: python\n        :name: code-example3\n\n        import paddle\n        import paddle.profiler as profiler\n        record_event = profiler.RecordEvent(\"record_mul\")\n        record_event.begin()\n        data1 = paddle.randn(shape=[3])\n        data2 = paddle.randn(shape=[3])\n        result = data1 * data2\n        record_event.end()"
    }
}