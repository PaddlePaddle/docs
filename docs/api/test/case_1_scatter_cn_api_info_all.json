{
    "139946281744992": {
        "all_names": [
            "paddle.fluid.Variable.scatter",
            "paddle.fluid.framework.Variable.scatter",
            "paddle.scatter",
            "paddle.static.Variable.scatter",
            "paddle.tensor.manipulation.scatter",
            "paddle.Tensor.scatter"
        ],
        "id": 139946281744992,
        "type": "function",
        "docstring": "**Scatter Layer**\nOutput is obtained by updating the input on selected indices based on updates.\n\n.. code-block:: python\n    :name:code_block_docstring\n\n    import paddle\n    #input:\n    x = paddle.to_tensor([[1, 1], [2, 2], [3, 3]], dtype='float32')\n    index = paddle.to_tensor([2, 1, 0, 1], dtype='int64')\n    # shape of updates should be the same as x\n    # shape of updates with dim > 1 should be the same as input\n    updates = paddle.to_tensor([[1, 1], [2, 2], [3, 3], [4, 4]], dtype='float32')\n    overwrite = False\n    # calculation:\n    if not overwrite:\n        for i in range(len(index)):\n            x[index[i]] = paddle.zeros([2])\n    for i in range(len(index)):\n        if (overwrite):\n            x[index[i]] = updates[i]\n        else:\n            x[index[i]] += updates[i]\n    # output:\n    out = paddle.to_tensor([[3, 3], [6, 6], [1, 1]])\n    out.shape # [3, 2]\n\n**NOTICE**: The order in which updates are applied is nondeterministic,\nso the output will be nondeterministic if index contains duplicates.\n\nArgs:\n    x (Tensor): The input N-D Tensor with ndim>=1. Data type can be float32, float64.\n    index (Tensor): The index 1-D Tensor. Data type can be int32, int64. The length of index cannot exceed updates's length, and the value in index cannot exceed input's length.\n    updates (Tensor): update input with updates parameter based on index. shape should be the same as input, and dim value with dim > 1 should be the same as input.\n    overwrite (bool): The mode that updating the output when there are same indices.\n\n        If True, use the overwrite mode to update the output of the same index,\n            if False, use the accumulate mode to update the output of the same index.Default value is True.\n\n    name(str, optional): The default value is None. Normally there is no need for user to set this property.  For more information, please refer to :ref:`api_guide_Name` .\n\nReturns:\n    Tensor: The output is a Tensor with the same shape as x.\n\nExamples:\n    .. code-block:: python\n\n        import paddle\n\n        x = paddle.to_tensor([[1, 1], [2, 2], [3, 3]], dtype='float32')\n        index = paddle.to_tensor([2, 1, 0, 1], dtype='int64')\n        updates = paddle.to_tensor([[1, 1], [2, 2], [3, 3], [4, 4]], dtype='float32')\n\n        output1 = paddle.scatter(x, index, updates, overwrite=False)\n        # [[3., 3.],\n        #  [6., 6.],\n        #  [1., 1.]]\n\n        output2 = paddle.scatter(x, index, updates, overwrite=True)\n        # CPU device:\n        # [[3., 3.],\n        #  [4., 4.],\n        #  [1., 1.]]\n        # GPU device maybe have two results because of the repeated numbers in index\n        # result 1:\n        # [[3., 3.],\n        #  [4., 4.],\n        #  [1., 1.]]\n        # result 2:\n        # [[3., 3.],\n        #  [2., 2.],\n        #  [1., 1.]]"
    }
}