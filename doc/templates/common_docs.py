#
# Some common descriptions used in Paddle API docs
# You can copy the wordings here if that is suitable to your scenario.
#

common_args_en = """
    x (Tensor): the input tensor, it's data type should be float32, float64, int32, int64.
    name(str, optional): name for the operation (optional, default is None). For more information, please refer to :ref:`api_guide_Name`.
    dtype(str, optional): the data type of the output tensor, can be float32, float64, int32, int64.
    param_attr(ParamAttr, optional): the parameter attribute for learnable weights(Parameter) of this layer. For more information, please refer to :ref:`api_fluid_ParamAttr`.
    bias_attr(ParamAttr, optional): the parameter attribute for learnable bias(Bias) of this layer. For more information, please refer to :ref:`api_fluid_ParamAttr`.
    act (str, optional): Activation to be applied to the output(optional, default is None), such as sigmoid、tanh、relu; For more information, please refer to :ref:`api_guide_activations`.
    y (Tensor): the input tensor, it's data type should be float32, float64, int32, int64.
    use_cudnn (bool, optional): Use cudnn kernel or not(optional, default is False), it is valid only when the cudnn library is installed.
    label (Tensor): The label of training data, it's data type should be int32, int64.
    learning_rate (Tensor|float): The initial learning rate. If the type is Tensor, it’s a Tensor with shape [1], the data type can be float32 or float64. It also can be set to python float number.
    axis (int, optional): Axis to compute the input tensor.Default is 0. 
    out (Tensor, optional): Optional output which can be any created Tensor to store the result of operation. If out is None, a new Tensor will be create to store the result.Default is None.
    epsilon (float, optional): Small float added to denominator to avoid dividing by zero. Default is 1e-05.
    is_test (bool, optional): A flag indicating whether execution is in test phase. Default is False, means not in test phase.
    shape (Tensor|tuple|list): Shape of the Tensor. If shape is a list or tuple, the elements of it should be integers or Tensors with shape [1]. If shape is Tensor, it should be an 1-D Tensor .
    keep_dim (bool): Whether to reserve the reduced dimension in the output Tensor. The result tensor will have one fewer dimension than the input unless keep_dim is true. Default is False.
    seed (int, optional): Random seed. 0 means use a seed generated by the system. Note that if seed is not 0, this operator will always generate the same random numbers every time. Default is 0.
    filter_size(tuple|list|int): The filter size. If filter_size is a tuple, it must contain two integers, (filter_size_height, filter_size_width). Otherwise, filter_size_height = filter_size_width = filter_size.
    padding (tuple|int): The padding size. If padding is a tuple, it must contain two integers, (padding_height, padding_width). Otherwise, the padding_weight = padding_width = padding. Default is 0.
    nclude_sublayers (bool, optional): Whether include the sublayers. If True, return list includes the sublayers weights. Default is True.
    stride (tuple|int): The stride size. If stride is a tuple, it must contain two integers, (stride_height, stride_width). Otherwise, the stride_height = stride_width = stride. Default is 1. 
    groups (int, optional): The group number of convolution layer. When group=n, the input and convolution kernels are divided into n groups equally, the first group of convolution kernels and the first group of inputs are subjected to convolution calculation, the second group of convolution kernels and the second group of inputs are subjected to convolution calculation, ……, the nth group of convolution kernels and the nth group of inputs perform convolution calculations. Default is 1.
    regularization (WeightDecayRegularizer, optional) – The strategy of regularization. There are two method: :ref:`api_fluid_regularizer_L1Decay` 、 :ref:`api_fluid_regularizer_L2Decay` . If a parameter has set regularizer using  :ref:`api_fluid_ParamAttr` already, the regularization setting here in optimizer will be ignored for this parameter. Otherwise, the regularization setting here in optimizer will take effect. Default None, meaning there is no regularization.
    grad_clip (GradientClipBase, optional): Gradient cliping strategy, it's an instance of some derived class of ``GradientClipBase`` . There are three cliping strategies ( :ref:`api_fluid_clip_GradientClipByGlobalNorm` , :ref:`api_fluid_clip_GradientClipByNorm` , :ref:`api_fluid_clip_GradientClipByValue` ). Default None, meaning there is no gradient clipping.
    dilation (tuple|int) – The dilation size. If dilation is a tuple, it must contain two integers, (dilation_height, dilation_width). Otherwise, the dilation_height = dilation_width = dilation. Default is 1.
    stop_gradient (bool, optional) – A boolean that mentions whether gradient should flow. Default is True, means stop calculate gradients.
"""

common_args_cn = """
    x (Tensor) - 输入的Tensor，数据类型为：float32、float64、int32、int64。
    name (str, 可选） - 操作的名称(可选，默认值为None）。 更多信息请参见 :ref:`api_guide_Name`。
    dtype (str, 可选) - 输出Tensor的数据类型，支持int32、int64、float32、float64。
    param_attr (ParamAttr, 可选) – 该Layer的可学习的权重(Parameter)的参数属性。更多信息请参见 :ref:`cn_api_fluid_ParamAttr`。
    bias_attr (ParamAttr, 可选) - 该Layer的可学习的偏置(Bias)的参数属性。更多信息请参见 :ref:`cn_api_fluid_ParamAttr`。
    act (str, 可选) - 应用于输出的激活函数(可选，默认值为None)，如sigmoid、tanh、relu等，更多信息请参见 :ref:api_guide_activations。
    y (Tensor) - 输入的Tensor，数据类型为：float32、float64、int32、int64。
    use_cudnn (bool, 可选) - 指示是否用cudnn库。当 use_cudnn 为True时，在安装GPU版本Paddle并且本机安装cudnn库的前提下，使用GPU训练或推理时才有效。默认值为False。
    label (Tensor) - 训练数据的标签，数据类型为：int32, int64。
    learning_rate (Tensor|float) - 学习率,如果类型为Tensor，则为shape为[1]的Tensor，数据类型为float32或float64；也可以是python的float类型。
    axis (int, 可选) - 指定对输入Tensor进行运算的轴。默认值为0。
    out (Tensor，可选) -  指定存储运算结果的Tensor。如果设置为None或者不设置，将创建新的Tensor存储运算结果，默认值为None。
    epsilon (float, 可选) - 添加到分母上的值以防止分母除0。默认值为1e-05。
    is_test (bool, 可选) - 用于表明是否在测试阶段执行。默认值为False，表示非测试阶段。
    shape (Tensor|tuple|list) - Tensor的形状。如果shape是一个列表或元组，则其元素应该是形状为[1]的整数或Tensor。 如果shape是Tensor，则它应该是一维Tensor。
    keep_dim (bool) - 是否在输出Tensor中保留减小的维度。如 keep_dim 为true，否则结果张量的维度将比输入张量小，默认值为False。
    seed (int, optional) - 随机种子。0表示使用系统生成的种子。如果种子不为0，该操作符每次都生成同样的随机数。默认值为0。
    filter_size (tuple|list|int) - 卷积核大小。如果filter_size是一个元组，则必须包含两个整型数，(filter_size_height, filter_size_width)。否则，filter_size_height = filter_size_width = filter_size。
    padding  (tuple|int) – padding大小。如果padding为元组，则必须包含两个整数(padding_height, padding_width)。否则padding_height = padding_width = padding。默认值为0。
    include_sublayers (bool, 可选) - 是否返回子层的参数。如果为True，返回的列表中包含子层的参数。默认值为True。
    stride (tuple|int) -  步长大小。如果stride为元组，则必须包含两个整数(stride_height, stride_width)。否则stride_height = stride_width = stride。默认值为1。
    groups (int, 可选) - 卷积的组数。当group=n，输入和卷积核分别平均分为n组，第一组卷积核和第一组输入进行卷积计算，第二组卷积核和第二组输入进行卷积计算，……，第n组卷积核和第n组输入进行卷积计算。默认值为11。
    regularization (WeightDecayRegularizer，可选) - 正则化方法。支持两种正则化策略: :ref:`cn_api_fluid_regularizer_L1Decay` 、 :ref:`cn_api_fluid_regularizer_L2Decay` 。如果一个参数已经在 :ref:`cn_api_fluid_ParamAttr` 中设置了正则化，这里的正则化设置将被忽略；如果没有在 :ref:`cn_api_fluid_ParamAttr` 中设置正则化，这里的设置才会生效。默认值为None，表示没有正则化。
    grad_clip  (GradientClipBase, 可选) – 梯度裁剪的策略，支持三种裁剪策略： :ref:`cn_api_fluid_clip_GradientClipByGlobalNorm` 、 :ref:`cn_api_fluid_clip_GradientClipByNorm` 、 :ref:`cn_api_fluid_clip_GradientClipByValue` 。
    dilation (tuple|int, 可选) - dilation大小。如果dilation为元组，则必须包含两个整数(dilation_height, dilation_width)。否则dilation_height = dilation_width = dilation。默认值为1。 
    stop_gradient (bool，可选) - 提示是否应该停止计算梯度，默认值为True，表示停止计算梯度。
"""
