动态图转静态图

PaddlePaddle动态图模式写的代码将按照我们编写命令的顺序进行执行。这种机制更符合python程序员习惯，使得调试更加容易，并且也使得我们将大脑中的想法更轻易转化为实际代码。其具有容易debug，容易使用，灵活使用python语句的优点。不过python在部分性能上无法比过C++，工业界预测部署很多地方（如大型推荐系统，移动端）却希望直接使用C++提速，使用python的速度负担太大。这种时候静态图更具有部署和性能的优势。静态图意味着程序在编译执行时先搭建起神经网络的结构，然后再执行神经网络操作。神经网络的结构规定好后可以脱离python依赖执行。

因此动态图比静态图更容易使用，但部署性能没有静态图有优势。一种解决方法是让用户仍然使用动态图写代码，但是通过PaddlePaddle框架对用户代码的分析，转化为静态图网络结构，这就是动态图转静态图模块。这样做兼顾用户的易用性和部署性能。


基本使用方法


高级Debug功能


内部架构原理

